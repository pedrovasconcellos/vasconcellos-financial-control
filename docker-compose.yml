name: financial-control
version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
      target: runtime
    image: financial-control-api:dev
    environment:
      CONFIG_FILE: /app/src/configs/local_credentials.yaml
      APP_ENVIRONMENT: development
      AWS_REGION: us-east-1
    ports:
      - "8080:8080"
    depends_on:
      mongo:
        condition: service_healthy
      localstack:
        condition: service_healthy
    volumes:
      - ./src/configs/local_credentials.yaml:/app/src/configs/local_credentials.yaml:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/app/healthcheck"]
      interval: 10s
      timeout: 3s
      retries: 5

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: financial-control
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    build:
      context: .
      dockerfile: docker/Dockerfile.localstack
    image: financial-control-localstack:dev
    ports:
      - "4566:4566"
    environment:
      SERVICES: s3,sqs,cognito-idp
      DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      LAMBDA_DOCKER_NETWORK: financial-control_app-network
    volumes:
      - "./scripts/localstack:/etc/localstack/init/ready.d"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "awslocal", "sqs", "list-queues"]
      interval: 15s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      args:
        VITE_API_URL: http://localhost:8080/api/v1
    image: financial-control-frontend:dev
    ports:
      - "5173:80"
    depends_on:
      api:
        condition: service_started
    networks:
      - app-network

  transaction-lambda:
    build:
      context: .
      dockerfile: docker/Dockerfile.lambda
    image: financial-control-lambda:dev
    environment:
      - AWS_REGION=us-east-1
      - LAMBDA_LOCAL=true
      - CONFIG_FILE=/var/task/src/configs/local_credentials.yaml
    volumes:
      - ./src/configs/local_credentials.yaml:/var/task/src/configs/local_credentials.yaml:ro
    depends_on:
      mongo:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
